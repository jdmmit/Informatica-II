/*
================================================================================
üíª PR√ÅCTICA SEMANA 3: PR√ÅCTICA 0 OFICIAL
================================================================================
Archivo: practica0.cpp
Objetivo: Resolver la pr√°ctica oficial aplicando todos los conceptos aprendidos
Material de referencia: inforII-u1-practica-0.pdf
Tiempo estimado: 6-10 horas
================================================================================
*/

#include <iostream>
#include <string>
#include <iomanip>
#include <cmath>
#include <cstdlib>
#include <ctime>
using namespace std;

/*
================================================================================
üéì EJEMPLO DE AN√ÅLISIS: PROBLEMA T√çPICO DE PR√ÅCTICA 0
================================================================================
Este ejemplo muestra c√≥mo abordar un problema t√≠pico paso a paso
================================================================================
*/

void ejemplo_analisis_problema() {
    cout << "=== EJEMPLO: AN√ÅLISIS DE PROBLEMA T√çPICO ===" << endl;
    cout << "\nPROBLEMA EJEMPLO:" << endl;
    cout << "Crear un programa que calcule el promedio de N estudiantes," << endl;
    cout << "determine cu√°ntos aprobaron (>=60) y muestre estad√≠sticas." << endl;
    
    cout << "\n--- AN√ÅLISIS DEL PROBLEMA ---" << endl;
    cout << "1. ENTRADA: N√∫mero de estudiantes, nombres y notas" << endl;
    cout << "2. PROCESO: Calcular promedio, contar aprobados" << endl;
    cout << "3. SALIDA: Promedio general, cantidad de aprobados, estad√≠sticas" << endl;
    
    cout << "\n--- ALGORITMO ---" << endl;
    cout << "1. Pedir n√∫mero de estudiantes" << endl;
    cout << "2. Para cada estudiante:" << endl;
    cout << "   - Pedir nombre y nota" << endl;
    cout << "   - Validar nota (0-100)" << endl;
    cout << "   - Acumular suma y contar aprobados" << endl;
    cout << "3. Calcular promedio general" << endl;
    cout << "4. Mostrar resultados y estad√≠sticas" << endl;
    
    cout << "\n--- IMPLEMENTACI√ìN ---" << endl;
    
    int numEstudiantes;
    double sumaNotas = 0.0;
    int aprobados = 0;
    double notaMayor = 0.0, notaMenor = 100.0;
    
    cout << "Ingrese el n√∫mero de estudiantes: ";
    cin >> numEstudiantes;
    
    // Validar entrada
    while (numEstudiantes <= 0) {
        cout << "Debe ingresar un n√∫mero positivo: ";
        cin >> numEstudiantes;
    }
    
    // Procesar cada estudiante
    for (int i = 1; i <= numEstudiantes; i++) {
        string nombre;
        double nota;
        
        cout << "\nEstudiante " << i << ":" << endl;
        cout << "Nombre: ";
        cin >> nombre;
        cout << "Nota: ";
        cin >> nota;
        
        // Validar nota
        while (nota < 0 || nota > 100) {
            cout << "Nota inv√°lida. Ingrese entre 0-100: ";
            cin >> nota;
        }
        
        // Procesar datos
        sumaNotas += nota;
        if (nota >= 60) aprobados++;
        if (nota > notaMayor) notaMayor = nota;
        if (nota < notaMenor) notaMenor = nota;
        
        // Mostrar estado individual
        cout << nombre << ": " << nota << " - " 
             << (nota >= 60 ? "APROBADO" : "REPROBADO") << endl;
    }
    
    // Calcular y mostrar resultados
    double promedio = sumaNotas / numEstudiantes;
    double porcentajeAprobados = (double)aprobados / numEstudiantes * 100;
    
    cout << fixed << setprecision(2);
    cout << "\n--- ESTAD√çSTICAS FINALES ---" << endl;
    cout << "Total de estudiantes: " << numEstudiantes << endl;
    cout << "Promedio general: " << promedio << endl;
    cout << "Estudiantes aprobados: " << aprobados << " (" << porcentajeAprobados << "%)" << endl;
    cout << "Estudiantes reprobados: " << (numEstudiantes - aprobados) << endl;
    cout << "Nota m√°s alta: " << notaMayor << endl;
    cout << "Nota m√°s baja: " << notaMenor << endl;
    
    // An√°lisis adicional
    if (promedio >= 80) {
        cout << "¬°Excelente desempe√±o del grupo!" << endl;
    } else if (promedio >= 70) {
        cout << "Buen desempe√±o del grupo" << endl;
    } else if (promedio >= 60) {
        cout << "Desempe√±o regular del grupo" << endl;
    } else {
        cout << "El grupo necesita refuerzo acad√©mico" << endl;
    }
}

/*
================================================================================
üìù PLANTILLA: PROBLEMA 1 - CALCULADORA DE ESTAD√çSTICAS
================================================================================
Resuelve este problema siguiendo la metodolog√≠a mostrada
================================================================================
*/

void problema_1_estadisticas() {
    cout << "\n=== PROBLEMA 1: CALCULADORA DE ESTAD√çSTICAS ===" << endl;
    
    /*
    ENUNCIADO:
    Crear un programa que permita ingresar N n√∫meros enteros y calcule:
    - Promedio aritm√©tico
    - N√∫mero mayor y menor
    - Cantidad de n√∫meros pares e impares
    - Cantidad de n√∫meros positivos, negativos y ceros
    - Desviaci√≥n est√°ndar (opcional)
    */
    
    cout << "\n--- AN√ÅLISIS DEL PROBLEMA ---" << endl;
    cout << "ENTRADA: Cantidad de n√∫meros y los n√∫meros" << endl;
    cout << "PROCESO: Calcular estad√≠sticas diversas" << endl;
    cout << "SALIDA: Todas las estad√≠sticas solicitadas" << endl;
    
    // üéØ TODO: Declara las variables necesarias
    int cantidadNumeros;
    double suma = 0.0;
    int mayor, menor;
    int pares = 0, impares = 0;
    int positivos = 0, negativos = 0, ceros = 0;
    
    // üéØ TODO: Pide la cantidad de n√∫meros y valida
    cout << "\nIngrese la cantidad de n√∫meros: ";
    // Aqu√≠ va tu c√≥digo
    
    // üéØ TODO: Inicializa mayor y menor con el primer n√∫mero
    cout << "Ingrese el n√∫mero 1: ";
    int primerNumero;
    cin >> primerNumero;
    mayor = menor = primerNumero;
    suma += primerNumero;
    
    // üéØ TODO: Clasifica el primer n√∫mero
    // (par/impar, positivo/negativo/cero)
    
    // üéØ TODO: Procesa los n√∫meros restantes usando for
    for (int i = 2; i <= cantidadNumeros; i++) {
        int numero;
        cout << "Ingrese el n√∫mero " << i << ": ";
        cin >> numero;
        
        // TODO: Actualizar suma
        // TODO: Actualizar mayor y menor
        // TODO: Clasificar par/impar
        // TODO: Clasificar positivo/negativo/cero
    }
    
    // üéØ TODO: Calcula y muestra resultados
    double promedio = suma / cantidadNumeros;
    
    cout << fixed << setprecision(2);
    cout << "\n--- ESTAD√çSTICAS ---" << endl;
    // TODO: Mostrar todos los resultados
    
    // üéØ TODO: An√°lisis adicional
    // Determina qu√© tipo de n√∫meros predominan
    // Da recomendaciones basadas en los datos
}

/*
================================================================================
üìù PLANTILLA: PROBLEMA 2 - SISTEMA DE FACTURACI√ìN
================================================================================
*/

void problema_2_facturacion() {
    cout << "\n=== PROBLEMA 2: SISTEMA DE FACTURACI√ìN ===" << endl;
    
    /*
    ENUNCIADO:
    Crear un sistema que permita:
    - Ingresar productos con precio y cantidad
    - Calcular subtotal por producto
    - Aplicar descuentos seg√∫n reglas:
      * Si subtotal > $100: 10% descuento
      * Si subtotal > $500: 15% descuento
      * Si subtotal > $1000: 20% descuento
    - Calcular impuestos (12%)
    - Mostrar factura detallada
    */
    
    // üéØ TODO: Declara variables necesarias
    int numeroProductos;
    double totalFactura = 0.0;
    double totalDescuentos = 0.0;
    
    cout << "=== SISTEMA DE FACTURACI√ìN ===" << endl;
    cout << "Ingrese el n√∫mero de productos: ";
    cin >> numeroProductos;
    
    // üéØ TODO: Valida que sea positivo
    
    cout << "\n--- INGRESO DE PRODUCTOS ---" << endl;
    
    // üéØ TODO: Procesa cada producto usando for
    for (int i = 1; i <= numeroProductos; i++) {
        string nombreProducto;
        double precio;
        int cantidad;
        
        cout << "\nProducto " << i << ":" << endl;
        cout << "Nombre: ";
        // TODO: Leer nombre del producto
        
        cout << "Precio unitario: $";
        // TODO: Leer y validar precio
        
        cout << "Cantidad: ";
        // TODO: Leer y validar cantidad
        
        // üéØ TODO: Calcula subtotal
        double subtotal = precio * cantidad;
        
        // üéØ TODO: Calcula descuento seg√∫n reglas
        double descuento = 0.0;
        if (subtotal > 1000) {
            descuento = subtotal * 0.20;
        } else if (subtotal > 500) {
            // TODO: 15% descuento
        } else if (subtotal > 100) {
            // TODO: 10% descuento
        }
        
        double subtotalConDescuento = subtotal - descuento;
        totalFactura += subtotalConDescuento;
        totalDescuentos += descuento;
        
        // üéØ TODO: Muestra detalle del producto
        cout << "Subtotal: $" << subtotal << endl;
        if (descuento > 0) {
            cout << "Descuento aplicado: $" << descuento << endl;
            cout << "Subtotal con descuento: $" << subtotalConDescuento << endl;
        }
    }
    
    // üéØ TODO: Calcula impuestos y total final
    double impuestos = totalFactura * 0.12;
    double totalFinal = totalFactura + impuestos;
    
    // üéØ TODO: Muestra factura final
    cout << fixed << setprecision(2);
    cout << "\n=== FACTURA FINAL ===" << endl;
    // TODO: Mostrar resumen completo
}

/*
================================================================================
üìù PLANTILLA: PROBLEMA 3 - AN√ÅLISIS DE TEXTO
================================================================================
*/

void problema_3_analisis_texto() {
    cout << "\n=== PROBLEMA 3: AN√ÅLISIS DE TEXTO ===" << endl;
    
    /*
    ENUNCIADO:
    Crear un programa que analice una frase ingresada por el usuario:
    - Contar total de caracteres (con y sin espacios)
    - Contar vocales y consonantes
    - Contar palabras
    - Determinar si es pal√≠ndromo (opcional)
    - Mostrar estad√≠sticas
    */
    
    string frase;
    cout << "Ingrese una frase para analizar: ";
    cin.ignore();
    getline(cin, frase);
    
    // üéØ TODO: Declara contadores
    int totalCaracteres = frase.length();
    int caracteresConEspacios = totalCaracteres;
    int caracteressinEspacios = 0;
    int vocales = 0, consonantes = 0;
    int palabras = 1; // Empezamos con 1 palabra
    int espacios = 0;
    
    // üéØ TODO: Analiza cada car√°cter usando for
    for (int i = 0; i < totalCaracteres; i++) {
        char c = frase[i];
        
        // TODO: Convierte a min√∫scula para an√°lisis
        if (c >= 'A' && c <= 'Z') {
            c = c + 32; // Convierte a min√∫scula
        }
        
        // üéØ TODO: Clasifica el car√°cter
        if (c == ' ') {
            espacios++;
            palabras++; // Cada espacio indica nueva palabra
        } else if (c >= 'a' && c <= 'z') {
            caracteressinEspacios++;
            
            // TODO: Determina si es vocal o consonante
            if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {
                vocales++;
            } else {
                consonantes++;
            }
        }
    }
    
    // üéØ TODO: Muestra resultados
    cout << "\n--- AN√ÅLISIS DE LA FRASE ---" << endl;
    cout << "Frase: \"" << frase << "\"" << endl;
    // TODO: Mostrar todas las estad√≠sticas
    
    // üéØ TODO: An√°lisis adicional
    // Determina qu√© tipo de caracteres predominan
    // Calcula porcentajes
}

/*
================================================================================
üìù PLANTILLA: PROBLEMA 4 - JUEGO DE MATEM√ÅTICAS
================================================================================
*/

void problema_4_juego_matematicas() {
    cout << "\n=== PROBLEMA 4: JUEGO DE MATEM√ÅTICAS ===" << endl;
    
    /*
    ENUNCIADO:
    Crear un juego educativo que:
    - Genere operaciones matem√°ticas aleatorias
    - Permita elegir dificultad (suma, resta, multiplicaci√≥n, divisi√≥n)
    - Lleve puntaje de respuestas correctas/incorrectas
    - Muestre estad√≠sticas al final
    - Permita m√∫ltiples rondas
    */
    
    srand(time(0));
    
    int opcion;
    int respuestasCorrectas = 0, respuestasIncorrectas = 0;
    int totalPreguntas = 0;
    
    // üéØ TODO: Men√∫ principal usando do-while
    do {
        cout << "\n--- JUEGO DE MATEM√ÅTICAS ---" << endl;
        cout << "1. Suma (f√°cil)" << endl;
        cout << "2. Resta (f√°cil)" << endl;
        cout << "3. Multiplicaci√≥n (medio)" << endl;
        cout << "4. Divisi√≥n (dif√≠cil)" << endl;
        cout << "5. Modo mixto (experto)" << endl;
        cout << "6. Ver estad√≠sticas" << endl;
        cout << "0. Salir" << endl;
        cout << "Seleccione una opci√≥n: ";
        cin >> opcion;
        
        if (opcion >= 1 && opcion <= 5) {
            int numeroPreguntas;
            cout << "¬øCu√°ntas preguntas quiere resolver? ";
            cin >> numeroPreguntas;
            
            // üéØ TODO: Genera preguntas seg√∫n la opci√≥n
            for (int i = 1; i <= numeroPreguntas; i++) {
                int num1, num2, respuestaCorrecta, respuestaUsuario;
                char operador;
                
                // TODO: Genera n√∫meros seg√∫n dificultad
                switch (opcion) {
                    case 1: // Suma
                        num1 = rand() % 50 + 1;
                        num2 = rand() % 50 + 1;
                        operador = '+';
                        respuestaCorrecta = num1 + num2;
                        break;
                    case 2: // Resta
                        // TODO: Implementar resta
                        break;
                    case 3: // Multiplicaci√≥n
                        // TODO: Implementar multiplicaci√≥n
                        break;
                    case 4: // Divisi√≥n
                        // TODO: Implementar divisi√≥n (asegurar divisi√≥n exacta)
                        break;
                    case 5: // Mixto
                        // TODO: Elegir operaci√≥n aleatoria
                        break;
                }
                
                // üéØ TODO: Presenta la pregunta
                cout << "\nPregunta " << i << ": " << num1 << " " << operador << " " << num2 << " = ";
                cin >> respuestaUsuario;
                
                // üéØ TODO: Eval√∫a la respuesta
                if (respuestaUsuario == respuestaCorrecta) {
                    cout << "¬°Correcto!" << endl;
                    respuestasCorrectas++;
                } else {
                    cout << "Incorrecto. La respuesta era: " << respuestaCorrecta << endl;
                    respuestasIncorrectas++;
                }
                
                totalPreguntas++;
            }
        } else if (opcion == 6) {
            // üéØ TODO: Muestra estad√≠sticas
            if (totalPreguntas > 0) {
                double porcentajeAciertos = (double)respuestasCorrectas / totalPreguntas * 100;
                cout << "\n--- ESTAD√çSTICAS ---" << endl;
                // TODO: Mostrar estad√≠sticas completas
            } else {
                cout << "No hay estad√≠sticas a√∫n" << endl;
            }
        }
        
    } while (opcion != 0);
    
    // üéØ TODO: Mensaje de despedida con estad√≠sticas finales
}

/*
================================================================================
üéØ FUNCI√ìN PRINCIPAL - MEN√ö DE PROBLEMAS
================================================================================
*/

int main() {
    cout << "üöÄ PR√ÅCTICA SEMANA 3: PR√ÅCTICA 0 OFICIAL" << endl;
    cout << "=======================================" << endl;
    
    cout << "\nEsta semana resolver√°s problemas similares a los de la pr√°ctica oficial." << endl;
    cout << "Cada problema est√° dise√±ado para aplicar todos los conceptos aprendidos." << endl;
    
    int opcion;
    
    do {
        cout << "\n--- MEN√ö DE PROBLEMAS ---" << endl;
        cout << "0. Ver ejemplo de an√°lisis" << endl;
        cout << "1. Calculadora de estad√≠sticas" << endl;
        cout << "2. Sistema de facturaci√≥n" << endl;
        cout << "3. An√°lisis de texto" << endl;
        cout << "4. Juego de matem√°ticas" << endl;
        cout << "5. Resolver pr√°ctica oficial (cuando est√© disponible)" << endl;
        cout << "9. Salir" << endl;
        cout << "Seleccione un problema: ";
        cin >> opcion;
        
        switch (opcion) {
            case 0:
                ejemplo_analisis_problema();
                break;
            case 1:
                problema_1_estadisticas();
                break;
            case 2:
                problema_2_facturacion();
                break;
            case 3:
                problema_3_analisis_texto();
                break;
            case 4:
                problema_4_juego_matematicas();
                break;
            case 5:
                cout << "\nüéØ PR√ÅCTICA OFICIAL" << endl;
                cout << "Cuando recibas la pr√°ctica oficial:" << endl;
                cout << "1. Lee el enunciado completamente" << endl;
                cout << "2. Identifica entrada, proceso y salida" << endl;
                cout << "3. Dise√±a el algoritmo paso a paso" << endl;
                cout << "4. Implementa siguiendo buenas pr√°cticas" << endl;
                cout << "5. Prueba con diferentes casos" << endl;
                cout << "6. Documenta tu soluci√≥n" << endl;
                break;
            case 9:
                cout << "¬°Excelente trabajo en la Semana 3!" << endl;
                cout << "Est√°s listo para la pr√°ctica oficial." << endl;
                break;
            default:
                cout << "Opci√≥n inv√°lida" << endl;
        }
        
        if (opcion != 9 && opcion >= 0 && opcion <= 5) {
            cout << "\nPresiona Enter para continuar...";
            cin.ignore();
            cin.get();
        }
        
    } while (opcion != 9);
    
    return 0;
}

/*
================================================================================
üìã CHECKLIST DE PREPARACI√ìN - PR√ÅCTICA OFICIAL
================================================================================

ANTES DE LA PR√ÅCTICA:
‚ñ° He completado todos los ejercicios de preparaci√≥n
‚ñ° Domino la sintaxis b√°sica de C++
‚ñ° Puedo usar todas las estructuras de control
‚ñ° S√© validar entrada de datos
‚ñ° Puedo manejar arrays b√°sicos
‚ñ° Entiendo c√≥mo analizar problemas paso a paso

DURANTE LA PR√ÅCTICA:
‚ñ° Leo el enunciado completo antes de empezar
‚ñ° Identifico claramente entrada, proceso y salida
‚ñ° Dise√±o el algoritmo en papel primero
‚ñ° Escribo c√≥digo limpio y comentado
‚ñ° Pruebo con diferentes casos de entrada
‚ñ° Valido que mi programa no tenga errores

METODOLOG√çA DE RESOLUCI√ìN:
1. üìñ LEER: Entender completamente el problema
2. üéØ ANALIZAR: Identificar qu√© necesito hacer
3. üìù DISE√ëAR: Crear el algoritmo paso a paso
4. üíª IMPLEMENTAR: Escribir el c√≥digo
5. üß™ PROBAR: Verificar con diferentes casos
6. üìã DOCUMENTAR: Comentar y explicar la soluci√≥n

PUNTOS CLAVE A RECORDAR:
‚ñ° Validar siempre la entrada del usuario
‚ñ° Usar nombres de variables descriptivos
‚ñ° Comentar las partes importantes del c√≥digo
‚ñ° Manejar casos especiales (divisi√≥n por cero, etc.)
‚ñ° Formatear la salida de manera clara
‚ñ° Probar con casos l√≠mite

AUTOEVALUACI√ìN:
‚ñ° Mi c√≥digo compila sin errores
‚ñ° Produce los resultados esperados
‚ñ° Maneja casos de error apropiadamente
‚ñ° Est√° bien documentado y es legible
‚ñ° Sigue buenas pr√°cticas de programaci√≥n

CONFIANZA PARA LA PR√ÅCTICA OFICIAL: ___/10
√ÅREA QUE M√ÅS NECESITO REPASAR: _______________
TIEMPO ESTIMADO PARA RESOLVER LA PR√ÅCTICA: _____ horas

================================================================================
*/